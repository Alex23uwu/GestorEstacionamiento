<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgListaEstacionamiento.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imgListaEstacionamiento.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC4
        CAAAAk1TRnQBSQFMAgEBAwEAAQgBAAEIAQABEAEAARABAAT/AREBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEQBgABCJQAAb8BZwEmARsBewFvEAABewFvASYBGwG/AWcEAAFYAXcBxgFkAVgBdxAA
        AVgBdwHGAWQBWAF3BAABPwFnAZkBGQF7AW8QAAF7AW8BmQEZAT8BZyQAAfMBMwFgAQIB8wEzEAAB8wEz
        AWABAgHzATMEAAGTAWUBAAFkAXMBZhAAAXMBZgEAAWQBkwFlBAABPwEzAdkBAAE+AVMQAAE/ATMB2QEA
        AT8BMyQAAd4BewHeAXsB3gF7EAAB3gF7Ad4BewHeAXsEAAHeAXsB3gF7Ad4BexAAAd4BewHeAXsB3gF7
        BAAB3gF7Ad4BewHeAXsQAAHeAXsB3gF7Ad4BeyIAAfkBTxwzAfkBTwEYAWMBjAFlAYwBZQGMAWUBjAFl
        AYwBZQGMAWUBjAFlAYwBZQGMAWUBjAFlAYwBZQGMAWUBjAFlAYwBZQEYAWMBPgFTAX8BMgF/ATIBfwEy
        AX8BMgF/ATIBfwEyAX8BMgF/ATIBfwEyAX8BMgF/ATIBfwEyAX8BMgF/ATIBPgFTIAABYAECAWABAgFg
        AQIBYAECAWABAgFgAQIBYAECAWABAgFgAQIBYAECAWABAgFgAQIBYAECAWABAgFgAQIBYAECAQABZAEA
        AWQBAAFkAQABZAEAAWQBAAFkAQABZAEAAWQBAAFkAQABZAEAAWQBAAFkAQABZAEAAWQBAAFkAQABZAHZ
        AQAB2QEAAdkBAAHZAQAB2QEAAdkBAAHZAQAB2QEAAdkBAAHZAQAB2QEAAdkBAAHZAQAB2QEAAdkBAAHZ
        IQABYAECAWABAgHzATMBJgEDAWABAgFgAQIBYAECAWABAgFgAQIBYAECAWABAgFgAQIBLAEbAfMBMwFg
        AQIBYAECAQABZAEAAWQBkwFlAcYBZAEAAWQBAAFkAQABZAEAAWQBAAFkAQABZAEAAWQBAAFkAcwBZAFz
        AWYBAAFkAQABZAHZAQAB2QEAAXkBMgGZARkB2QEAAdkBAAHZAQAB2QEAAdkBAAHZAQAB2QEAAdkBAAF/
        ARoBPgFTAdkBAAHZIQABYAECAfMBMwIAAZwBcwFgAQIBYAECAWABAgFgAQIBYAECAWABAgFgAQIBYAEC
        Ad4BewIAAfMBMwFgAQIBAAFkAXMBZgIAAZwBcwEAAWQBAAFkAQABZAEAAWQBAAFkAQABZAEAAWQBAAFk
        Ad4BewIAAZMBZQEAAWQB2QEAAT4BUwIAAZwBcwHZAQAB2QEAAdkBAAHZAQAB2QEAAdkBAAHZAQAB2QEA
        Ad4BewIAAT8BMwHZIQABYAECASwBMwH/AX8B+QFPAWABAgFgAQIBYAECAWABAgFgAQIBYAECAWABAgFg
        AQIB+QFnAd4BewFsARoBYAECAQABZAGMAWUB/wF/ARgBYwEAAWQBAAFkAQABZAEAAWQBAAFkAQABZAEA
        AWQBAAFkATkBZwHeAXsBxgFkAQABZAHZAQABeQEaAf8BfwE+AVMB2QEAAdkBAAHZAQAB2QEAAdkBAAHZ
        AQAB2QEAAdkBAAG/AWcB3gF7AZkBGQHZIQAB8wEzAWABAgFgAQIBYAECAWABAgFgAQIBYAECAWABAgFg
        AQIBYAECAWABAgFgAQIBYAECAWABAgFgAQIB8wEzAZMBZQEAAWQBAAFkAQABZAEAAWQBAAFkAQABZAEA
        AWQBAAFkAQABZAEAAWQBAAFkAQABZAEAAWQBAAFkAZMBZQE/ATMB2QEAAdkBAAHZAQAB2QEAAdkBAAHZ
        AQAB2QEAAdkBAAHZAQAB2QEAAdkBAAHZAQAB2QEAAdkBAAE/ATMgAAH/AX8BMwFPAWABAgHzATMBvwFn
        Ab8BZwG/AWcBvwFnAb8BZwG/AWcBvwFnAb8BZwHzATMBYAECATMBTwH/AX8B/wF/AXMBZgEAAWQBcwFm
        AVgBdwFYAXcBWAF3AVgBdwFYAXcBWAF3AVgBdwFYAXcBcwFmAQABZAEYAWMB/wF/Af8BfwE+AVMB2QEA
        AT8BMwE/AWcBPwFnAT8BZwE/AWcBPwFnAT8BZwE/AWcBPwFnAT4BUwHZAQABfwFOAf8BfyIAAf8BfwFg
        AQIBOQFPEAABOQFPAWABAgH/AX8EAAH/AX8BAAFkARgBYxAAARgBYwEAAWQB/wF/BAAB/wF/AdkBAAE+
        AVMQAAE+AVMB2QEAAf8BfyYAAjMBJgEDAf8BfwwAAf8BfwEmAQMB8wEzCAABkwFlAcYBZAH/AX8MAAH/
        AX8BxgFkAZMBZQgAAX8BMgGZAQEB/wF/DAAB/wF/AZkBAQF5ATIoAAH/AWcBYAECAjMBOQFPATkBTwE5
        AU8BOQFPATkBTwE5AU8CMwFgAQIBnAFzCAABWAF3AQABZAGMAWUBGAFjARgBYwEYAWMBGAFjARgBYwEY
        AWMBjAFlAQABZAGcAXMIAAF7AW8B2QEAAX8BMgE+AVMBPgFTAT4BUwE+AVMBPgFTAT4BUwF/ATIB2QEA
        AZwBcygAAf8BfwHzATMBJgEDASYBAwEmAQMBJgEDASYBAwEmAQMBJgEDASYBAwHzATMB/wF/CAAB/wF/
        AXMBZgHGAWQBxgFkAcYBZAHGAWQBxgFkAcYBZAHGAWQBxgFkAXMBZgH/AX8IAAH/AX8BPgFTAZkBAQGZ
        AQEBmQEBAZkBAQGZAQEBmQEBAZkBAQGZAQEBPgFTAf8Bf6QAAUIBTQE+BwABPgMAASgDAAFAAwABEAMA
        AQEBAAEBBQABgBcAA/8BAAb/AgABjwHxAY8B8QGPAfECAAGPAfEBjwHxAY8B8QIAAY8B8QGPAfEBjwHx
        GgABIAEEASABBAEgAQQaAAGPAfEBjwHxAY8B8QIAAccB4wHHAeMBxwHjAgABwAEDAcABAwHAAQMCAAHA
        AQMBwAEDAcABAwIABv8CAAs=
</value>
  </data>
</root>